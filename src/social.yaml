openapi: 3.0.0
info:
  title: Platform REST APIs
  version: Evergreen
servers:
  - url: 'https://prod.apigateway.co/platform'
    description: Production
  - description: Demo
    url: 'https://demo.apigateway.co/platform'
  - description: Local
    url: '{local}/platform'
  - url: 'http://localhost:11001/platform'
    description: Localhost
paths:
  /salesContacts:
    post:
      summary: Create Sales Contact
      operationId: post-salesContacts
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/salesContacts'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created contact
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created contact
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        Use this operation to create a new Sales Contact for a business.

        An email and business location must be provided when creating a contact.

        Note: Currently when creating a contact you must specify exactly 1 Business Location id for it to be linked to. We intend to expand this limit.
      security:
        - OAuth2Demo:
            - sales.contact
        - OAuth2Prod:
            - sales.contact
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/salesContacts'
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      tags:
        - Sales Contacts
    options:
      operationId: options-salesContacts
      tags:
        - Options
        - Sales Contacts
      summary: List valid HTTP verbs for /salesContacts
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
components:
  parameters:
    pageLimit:
      name: 'page[limit]'
      in: query
      required: false
      schema:
        type: number
        maximum: 100
        minimum: 1
        default: 25
      description: 'The maximum number of items you would like returned in a single batch. Use the links.next member in the response to get the next batch. [Pagination Docs](https://developers.vendasta.com/platform/ZG9jOjEwMTkzMDg0-overview#paging).'
    pageCursor:
      name: 'page[cursor]'
      in: query
      required: false
      schema:
        type: string
      description: 'The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links. [Pagination Docs](https://developers.vendasta.com/platform/ZG9jOjEwMTkzMDg0-overview#paging).'
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth2Demo:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-api-demo.apigateway.co/oauth2/auth'
          tokenUrl: 'https://sso-api-demo.apigateway.co/oauth2/token'
          scopes:
            sales.contact: Read-write access to sales contact details
            'business:read': Read only access to business details
            business: Read-write access to business details
            partner: Read-write access to details about your partner
            financial: Read-write access to financial details
            order: Read-write access to order details
            'order:read': Read only access to order details
            'user.profile:read': Read access to the profile fields of all categories of users
            'user.contact:read': 'Read access to the contact info (email, phone, address) of all categories of users'
            'user.permission:read': 'Read access to the permission info (accessible locations, features and roles) of all categories of users'
            user.permission: 'Read-write access to the permission info (accessible locations, features and roles) of all categories of users'
            user.admin: Read-write access to manage all users
            'user:read': Read only access to all users
            user.list: '''Allows searching for users based on a set of filters. (ex: email, name, category, organization). Without this scope an exact user id is required.'
            self.user.admin: 'Allows editing the profile, contact info and profile image for the current user.'
            'self.user.contact:read': 'Read access to the contact info (email, phone, address) of the current user.'
            openid: Allows getting the user id of the current user
            profile: 'Readonly access to the user profile, including name, locale, and language preferences.'
            email: Allows readonly access to the email of the current user.
            phone: Allows readonly access to the phone numbers of the current user.
            address: Allows readonly access to the address of the current user.
            sales.account: Allows read-write access to account records
            sales.proposals: Allows read-write access to proposals
            product: Read access to the product details
    OAuth2Prod:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-api-prod.apigateway.co/oauth2/auth'
          tokenUrl: 'https://sso-api-prod.apigateway.co/oauth2/token'
          scopes:
            sales.contact: Read-write access to sales contact details
            'business:read': Read only access to business details
            business: Read-write access to business details
            partner: Read-write access to details about your partner
            financial: Read-write access to financial details
            'order:read': Read only access to order details
            order: Read-write access to order details
            'user.profile:read': Read access to the profile fields of all categories of users
            'user.contact:read': 'Read access to the contact info (email, phone, address) of all categories of users'
            'user.permission:read': 'Read access to the permission info (accessible locations, features and roles) of all categories of users'
            user.permission: 'Read-write access to the permission info (accessible locations, features and roles) of all categories of users'
            user.admin: Read-write access to manage all users
            'user:read': Read only access to all users
            user.list: '''Allows searching for users based on a set of filters. (ex: email, name, category, organization). Without this scope an exact user id is required.'
            self.user.admin: 'Allows editing the profile, contact info and profile image for the current user.'
            'self.user.contact:read': 'Read access to the contact info (email, phone, address) of the current user.'
            openid: Allows getting the user id of the current user
            profile: 'Readonly access to the user profile, including name, locale, and language preferences.'
            email: Allows readonly access to the email of the current user.
            phone: Allows readonly access to the phone numbers of the current user.
            address: Allows readonly access to the address of the current user.
            sales.account: Allows read-write access to account records
            sales.proposals: Allows read-write access to proposals
            product: Read access to the product details
  schemas:
    salesContacts:
      title: Sales Contact
      type: object
      x-lifecycle:
        status: trustedTester
      description: |-
        [Status](https://developers.vendasta.com/platform/ZG9jOjEwMTU2NTYy-versioning): `Trusted Tester`

        A Sales Contact is a person who works for the business that your sales team may send communications to regarding the business.

        Note: Currently when creating a contact you must specify exactly 1 businessLocations id for it to be linked to. We intend to expand this limit.
      x-tags:
        - Sales Contacts
      properties:
        type:
          type: string
          default: salesContacts
          enum:
            - salesContacts
          readOnly: false
        id:
          type: string
          description: The id will be assigned by the server and must be included on all update requests. Values sent during creation will be ignored.
        attributes:
          type: object
          properties:
            givenName:
              type: string
              maxLength: 25
              description: 'Given name(s) or first name(s) of the contact. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
              example: Samantha
            familyName:
              type: string
              maxLength: 25
              description: 'Surname(s) or last name(s) of the contact. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
              example: Smith
            phone:
              type: string
              description: |-
                The complete primary phone number for the contact.
                Formatting characters may be included.

                **Extensions**

                It is recommended that extensions are included at the end of the number after a supported separator: `,` (touch tone Pause),  `;` (touch tone Wait), `;ext=` (RFC3966/SIP/ tel: link protocol),  `ext.` (default)

                You may test the parsibility of a number using https://phonenumbers.temba.io/
              example: +1 (306) 555-1234 ext. 89
            phoneCountryCode:
              type: string
              description: An optional 2 character country code used to aid in parsing the raw number.
              maxLength: 2
              minLength: 2
              example: CA
            email:
              type: string
              format: email
              description: 'Required during creation: The primary email address for the contact'
              example: sam@example.com
        relationships:
          type: object
          properties:
            businessLocations:
              type: object
              description: 'Required during creation: The business locations that this contact is for'
              properties:
                data:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: AG-1234567
                      type:
                        type: string
                        default: businessLocations
                        enum:
                          - businessLocations
                    required:
                      - id
                      - type
                meta:
                  type: object
                  description: Readonly
                  properties:
                    total:
                      type: integer
                      description: 'Readonly: The total number of locations connected to this contact'
                      readOnly: true
                  readOnly: true
      required:
        - type
    
      type: object
      x-examples:
        Partner Activatable Product Example:
          id: 'MP-1234:EDITION-123'
          type: partnerActivatableProducts
          attributes:
            sku: 'MP-1234:EDITION-123'
            name: Product Name
            whiteLabelName: Custom Product Name
            iconUrl: 'https://example.com'
            tagline: Short Description
            bannerImageUrl: 'https://example.com'
            prices:
              - amount: 0
                currencyCode: CAD
                frequency: UNIT_BILLING_FREQUENCY_MONTHLY
                type: retail
          relationships:
            allowedCountries:
              data:
                - id: US
                  type: countries
            requiredProductIds:
              data:
                - id: 'MP-456:EDITION-456'
                  type: partnerActivatableProducts
      description: Details on the products you are currently selling in your store.
      title: Partner Activatable Products
      x-tags:
        - Partner Activatable Products
      properties:
        id:
          type: string
          description: Unique identifier of the record.
          example: 'MP-1234:EDITION-123'
        type:
          type: string
          description: Should always be partnerActivatableProducts.
          default: partnerActivatableProducts
          enum:
            - partnerActivatableProducts
        relationships:
          type: object
          properties:
            allowedCountries:
              type: object
              description: 'Allowed list of countries as 2-letter codes where the product can be sold. If empty, its allowed for any country. Country name from the code can be obtained with [Countries API](platform.yaml/paths/~1countries/get)'
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: US
                      type:
                        type: string
                        enum:
                          - countries
                        default: countries
            requiredProducts:
              type: object
              description: List of IDs of the products to be activated before activating this product.
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 'ABC:default:MP-456:EDITION-456'
                      type:
                        type: string
                        enum:
                          - partnerActivatableProducts
                        default: partnerActivatableProducts
        attributes:
          type: object
          properties:
            sku:
              type: string
              description: 'The unique identifier of a product, product edition or package. It can be obtained by following [this guide](https://docs.apigateway.co/docs/openapi-specs/docs/Guides/Sell/FindSKU.md).'
              example: 'MP-1234:EDITION-123'
            name:
              type: string
              description: Vendor provided name for the product.
              example: Product Name
            whiteLabelName:
              type: string
              description: Custom name for the product set by the Partner.
              example: Custom Product Name
            iconUrl:
              type: string
              description: 'Product logo url. Url to the jpg or png image with 1:1 aspect ratio. (Recommended: 240px x 240px).'
              format: uri
            tagline:
              type: string
              description: Briefly describes what the product does.
              example: Short Description
            bannerImageUrl:
              type: string
              description: Url to access the large rectangular image at the top of the marketing page.
              format: uri
            prices:
              type: array
              description: Describes the price of the product.
              items:
                type: object
                properties:
                  frequency:
                    type: string
                    description: Billing frequency of the product.
                  type:
                    type: string
                    description: Denotes the type of price.
                    example: retail
                  currencyCode:
                    type: string
                    description: Type of currency (code) of the price.
                    example: CAD
                  amount:
                    type: number
                    description: The cost of the product.
                    example: 42
      required:
        - id
        - type
tags:
  - name: Automations
  - name: Automation Runs
  - name: Business Categories
  - name: Business Locations
  - name: Countries
  - name: Orders
  - name: Order Custom Fields
  - name: Partner Activatable Products
  - name: Partners
  - name: Products
  - name: Product Custom Fields
  - name: Proposals
  - name: Purchases
  - name: Sales Accounts
  - name: Sales Account Custom Fields
  - name: Sales Contacts
  - name: Subscription Assignments
  - name: Subscriptions
  - name: Users
  - name: User Custom Fields
  - name: Options
